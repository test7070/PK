z_vccap_pk01:--z_vccap_pk01

declare @t_bnoa nvarchar(20)
declare @t_enoa nvarchar(20)

set @t_bnoa = case when '#non'=[3] then '' else [3] end
set @t_enoa = case when '#non'=[4] then char(255) else [4] end

---------------------------------------------------------------------------------

declare @bignum nvarchar(10)
set @bignum = '壹貳參肆伍陸柒捌玖'

declare @tmp1 table(
	gno nvarchar(1),
	idno int identity(0,1),
	yy nvarchar(10),
	mm nvarchar(10),
	dd nvarchar(10),
	noa nvarchar(20),
	buyer nvarchar(100),
	serial nvarchar(20),
	chkno nvarchar(6),
	product nvarchar(50),
	pmount decimal(20,2),
	punit nvarchar(20),
	pprice decimal(20,4),
	pmoney float,
	money decimal(20,0),
	tax decimal(20,0),
	total decimal(20,0),
	memo nvarchar(300),
	tt1 nvarchar(10),
	tt2 nvarchar(10),
	tt3 nvarchar(10),
	tm1 nvarchar(10),
	tm2 nvarchar(10),
	tm3 nvarchar(10),
	tm4 nvarchar(10),
	tm5 nvarchar(10),
	tm6 nvarchar(10),
	tm7 nvarchar(10),
	tm8 nvarchar(10)
)

insert into @tmp1
select 
	  '0',
	  substring(a.datea,1,3), --年
	  substring(a.datea,5,2), --月
	  substring(a.datea,8,2), --日
	  a.noa,a.buyer,a.serial,a.chkno,b.product,
	  case when LEN(b.productno) > 0 then b.mount else null end,
	  b.unit,
	  case when LEN(b.productno) > 0 then b.price else null end,
	  case when LEN(b.productno) > 0 then b.money else null end,
	  a.money,a.tax,a.total,a.memo,
	  case when a.taxtype = '1' then 'v' end,
	  case when a.taxtype = '2' then 'v' end,
	  case when a.taxtype = '4' then 'v' end,
--total大寫數字處理
--REPLICATE('0',8-LEN(CAST(total as varchar(8))))+CAST(total as varchar(8) 將total金額不滿8位數的前面補0
	  SUBSTRING(@bignum,CAST(SUBSTRING(REPLICATE('0',8-LEN(CAST(a.total as varchar(8))))+CAST(a.total as varchar(8)),1,1) as int) ,1),
	  SUBSTRING(@bignum,CAST(SUBSTRING(REPLICATE('0',8-LEN(CAST(a.total as varchar(8))))+CAST(a.total as varchar(8)),2,1) as int) ,1),
	  SUBSTRING(@bignum,CAST(SUBSTRING(REPLICATE('0',8-LEN(CAST(a.total as varchar(8))))+CAST(a.total as varchar(8)),3,1) as int) ,1),
	  SUBSTRING(@bignum,CAST(SUBSTRING(REPLICATE('0',8-LEN(CAST(a.total as varchar(8))))+CAST(a.total as varchar(8)),4,1) as int) ,1),
	  SUBSTRING(@bignum,CAST(SUBSTRING(REPLICATE('0',8-LEN(CAST(a.total as varchar(8))))+CAST(a.total as varchar(8)),5,1) as int) ,1),
	  SUBSTRING(@bignum,CAST(SUBSTRING(REPLICATE('0',8-LEN(CAST(a.total as varchar(8))))+CAST(a.total as varchar(8)),6,1) as int) ,1),
	  SUBSTRING(@bignum,CAST(SUBSTRING(REPLICATE('0',8-LEN(CAST(a.total as varchar(8))))+CAST(a.total as varchar(8)),7,1) as int) ,1),
	  SUBSTRING(@bignum,CAST(SUBSTRING(REPLICATE('0',8-LEN(CAST(a.total as varchar(8))))+CAST(a.total as varchar(8)),8,1) as int) ,1)
from vcca a
left join vccas b on a.noa = b.noa
where (a.noa between @t_bnoa and @t_enoa) 

update @tmp1 set tm1 = '零' where len(tm1) = 0
update @tmp1 set tm2 = '零' where len(tm2) = 0
update @tmp1 set tm3 = '零' where len(tm3) = 0
update @tmp1 set tm4 = '零' where len(tm4) = 0
update @tmp1 set tm5 = '零' where len(tm5) = 0
update @tmp1 set tm6 = '零' where len(tm6) = 0
update @tmp1 set tm7 = '零' where len(tm7) = 0
update @tmp1 set tm8 = '零' where len(tm8) = 0

declare @tmp2 table(
	gno nvarchar(1),
	idno int identity(0,1),
	yy nvarchar(10),
	mm nvarchar(10),
	dd nvarchar(10),
	noa nvarchar(20),
	buyer nvarchar(100),
	serial nvarchar(20),
	chkno nvarchar(6),
	product1 nvarchar(50),
	product2 nvarchar(50),product3 nvarchar(50),product4 nvarchar(50),product5 nvarchar(50),product6 nvarchar(50),product7 nvarchar(50),
	pmount1 decimal(20,2),pmount2 decimal(20,2),pmount3 decimal(20,2),pmount4 decimal(20,2),pmount5 decimal(20,2),pmount6 decimal(20,2),pmount7 decimal(20,2),
	punit1 nvarchar(15),punit2 nvarchar(15),punit3 nvarchar(15),punit4 nvarchar(15),punit5 nvarchar(15),punit6 nvarchar(15),punit7 nvarchar(15),
	pprice1 decimal(20,4),pprice2 decimal(20,4),pprice3 decimal(20,4),pprice4 decimal(20,4),pprice5 decimal(20,4),pprice6 decimal(20,4),pprice7 decimal(20,4),
	pmoney1 decimal(20,4),pmoney2 decimal(20,4),pmoney3 decimal(20,4),pmoney4 decimal(20,4),pmoney5 decimal(20,4),pmoney6 decimal(20,4),pmoney7 decimal(20,4),
	money decimal(20,0),
	tax decimal(20,0),
	total decimal(20,0),
	memo nvarchar(300),
	memo1 nvarchar(300),
	memo2 nvarchar(300),
	memo3 nvarchar(300),
	tt1 nvarchar(10),
	tt2 nvarchar(10),
	tt3 nvarchar(10),
	tm1 nvarchar(10),
	tm2 nvarchar(10),
	tm3 nvarchar(10),
	tm4 nvarchar(10),
	tm5 nvarchar(10),
	tm6 nvarchar(10),
	tm7 nvarchar(10),
	tm8 nvarchar(10)
)

declare @noa1 nvarchar(20)
declare @noa2 nvarchar(20)
declare @idno1 int
declare @idno2 int
declare @recno int

set @noa2 = 'zzzzzzzzzz'
set @idno2 = -1

declare cursor_table cursor for
select noa,idno from @tmp1 order by noa,idno
open cursor_table
fetch next from cursor_table
into @noa1,@idno1
while(@@FETCH_STATUS <> -1)
begin
	if(@noa2 != @noa1 or @recno%7 = 1)
	begin
		set @recno = 1
		insert into @tmp2(gno,yy,mm,dd,noa,buyer,serial,chkno,product1,pmount1,punit1,pprice1,pmoney1,money,tax,
			        total,memo,tt1,tt2,tt3,tm1,tm2,tm3,tm4,tm5,tm6,tm7,tm8)
		select gno,yy,mm,dd,noa,buyer,serial,chkno,product,pmount,punit,pprice,pmoney,money,tax,
			   total,memo,tt1,tt2,tt3,tm1,tm2,tm3,tm4,tm5,tm6,tm7,tm8		
		from @tmp1 where idno = @idno1
		
		set @noa2 = @noa1
		set @recno = @recno + 1
		set @idno2 = @idno2 + 1
	end
	else if(@recno = 2)
	begin
		update @tmp2 set product2 = (select product from @tmp1 where idno = @idno1),
				         pmount2 = (select pmount from @tmp1 where idno = @idno1),
				         punit2 = (select punit from @tmp1 where idno = @idno1),
					     pprice2 = (select pprice from @tmp1 where idno = @idno1),
						 pmoney2 = (select pmoney from @tmp1 where idno = @idno1)
		where idno = @idno2
		
		set @noa2 = @noa1
		set @recno = @recno + 1
	end
	else if(@recno = 3)
	begin
		update @tmp2 set product3 = (select product from @tmp1 where idno = @idno1),
				         pmount3 = (select pmount from @tmp1 where idno = @idno1),
				         punit3 = (select punit from @tmp1 where idno = @idno1),
					     pprice3 = (select pprice from @tmp1 where idno = @idno1),
						 pmoney3 = (select pmoney from @tmp1 where idno = @idno1)
		where idno = @idno2
		
		set @noa2 = @noa1
		set @recno = @recno + 1
	end
	else if(@recno = 4)
	begin
		update @tmp2 set product4 = (select product from @tmp1 where idno = @idno1),
				         pmount4 = (select pmount from @tmp1 where idno = @idno1),
				         punit4 = (select punit from @tmp1 where idno = @idno1),
					     pprice4 = (select pprice from @tmp1 where idno = @idno1),
						 pmoney4 = (select pmoney from @tmp1 where idno = @idno1)
		where idno = @idno2
		
		set @noa2 = @noa1
		set @recno = @recno + 1
	end
	else if(@recno = 5)
	begin
		update @tmp2 set product5 = (select product from @tmp1 where idno = @idno1),
				         pmount5 = (select pmount from @tmp1 where idno = @idno1),
				         punit5 = (select punit from @tmp1 where idno = @idno1),
					     pprice5 = (select pprice from @tmp1 where idno = @idno1),
						 pmoney5 = (select pmoney from @tmp1 where idno = @idno1)
		where idno = @idno2
		
		set @noa2 = @noa1
		set @recno = @recno + 1
	end
	else if(@recno = 6)
	begin
		update @tmp2 set product6 = (select product from @tmp1 where idno = @idno1),
				         pmount6 = (select pmount from @tmp1 where idno = @idno1),
				         punit6 = (select punit from @tmp1 where idno = @idno1),
					     pprice6 = (select pprice from @tmp1 where idno = @idno1),
						 pmoney6 = (select pmoney from @tmp1 where idno = @idno1)
		where idno = @idno2
		
		set @noa2 = @noa1
		set @recno = @recno + 1
	end
	else if(@recno = 7)
	begin
		update @tmp2 set product7 = (select product from @tmp1 where idno = @idno1),
				         pmount7 = (select pmount from @tmp1 where idno = @idno1),
				         punit7 = (select punit from @tmp1 where idno = @idno1),
					     pprice7 = (select pprice from @tmp1 where idno = @idno1),
						 pmoney7 = (select pmoney from @tmp1 where idno = @idno1)
		where idno = @idno2
		
		set @noa2 = @noa1
		set @recno = @recno + 1
	end
	fetch next from cursor_table
	into @noa1,@idno1	
end
close cursor_table
deallocate cursor_table


declare @maxidno int

declare cursor_table cursor for
select noa,idno from @tmp2 order by noa,idno
open cursor_table
fetch next from cursor_table
into @noa2,@idno2
while(@@FETCH_STATUS <> -1)
begin
	
	set @maxidno = (select MAX(idno) from @tmp2 where noa = @noa2)
	update @tmp2 set money = null,tax = null,total = null,
					 tm1 = REPLICATE(' ',1),tm2 = REPLICATE('　',1),tm3 = REPLICATE('　',1),tm4 = REPLICATE('　',1),
				     tm5 = REPLICATE('　',1),tm6 = REPLICATE('　',1),tm7 = REPLICATE('　',1),tm8 = REPLICATE('　',1)
	where noa = @noa2 and idno < @maxidno
	
	fetch next from cursor_table
	into @noa2,@idno2	
end
close cursor_table
deallocate cursor_table 

update @tmp2 set memo1 = memo 

declare @n int 
declare @string nvarchar(max)

declare @memo nvarchar(max)= ''
declare cursor_table cursor for 
select noa,memo from @tmp2 where len(isnull(memo,''))>0 order by noa
open cursor_table 
fetch next from cursor_table 
into @noa1,@memo 
while(@@FETCH_STATUS <> -1) 
begin
	set @n = 0
	while CHARINDEX('chr(10)',@memo)>0
	begin
		set @n = @n +1
		set @string = left(@memo,CHARINDEX('chr(10)',@memo)-1)
		if @n = 1
		begin
			update @tmp2 set memo1 = @string where noa = @noa1
		end
		else if @n = 2
		begin
			update @tmp2 set memo2 = @string where noa = @noa1
		end
		else if @n = 3
		begin
			update @tmp2 set memo3 = @string where noa = @noa1
		end
		set @memo = SUBSTRING(@memo,CHARINDEX('chr(10)',@memo)+7,LEN(@memo))
	end	
	if LEN(@memo)>0
	begin
		set @n = @n +1
		if @n = 1
		begin
			update @tmp2 set memo1 = @memo where noa = @noa1
		end
		else if @n = 2
		begin
			update @tmp2 set memo2 = @memo where noa = @noa1
		end
		else if @n = 3
		begin
			update @tmp2 set memo3 = @memo where noa = @noa1
		end
	end

	fetch next from cursor_table 
	into @noa1,@memo 	
end 
close cursor_table 
deallocate cursor_table 

select gno,yy,mm,dd,noa,buyer,serial,chkno,
	   product1,product2,product3,product4,product5,product6,product7,
	   case when dbo.split(pmount1,'.',1) = 0 then dbo.getComma(pmount1,0)+' '+punit1 else dbo.getComma(pmount1,2)+' '+punit1 end pmount1,
	   case when dbo.split(pmount2,'.',1) = 0 then dbo.getComma(pmount2,0)+' '+punit2 else dbo.getComma(pmount2,2)+' '+punit2 end pmount2,
	   case when dbo.split(pmount3,'.',1) = 0 then dbo.getComma(pmount3,0)+' '+punit3 else dbo.getComma(pmount3,2)+' '+punit3 end pmount3,
	   case when dbo.split(pmount4,'.',1) = 0 then dbo.getComma(pmount4,0)+' '+punit4 else dbo.getComma(pmount4,2)+' '+punit4 end pmount4,
	   case when dbo.split(pmount5,'.',1) = 0 then dbo.getComma(pmount5,0)+' '+punit5 else dbo.getComma(pmount5,2)+' '+punit5 end pmount5,
	   case when dbo.split(pmount6,'.',1) = 0 then dbo.getComma(pmount6,0)+' '+punit6 else dbo.getComma(pmount6,2)+' '+punit6 end pmount6,
	   case when dbo.split(pmount7,'.',1) = 0 then dbo.getComma(pmount7,0)+' '+punit7 else dbo.getComma(pmount7,2)+' '+punit7 end pmount7,
	   case when dbo.split(pprice1,'.',1) = 0 then dbo.getComma(pprice1,0) else dbo.getComma(pprice1,-1) end pprice1,
	   case when dbo.split(pprice2,'.',1) = 0 then dbo.getComma(pprice2,0) else dbo.getComma(pprice2,-1) end pprice2,
	   case when dbo.split(pprice3,'.',1) = 0 then dbo.getComma(pprice3,0) else dbo.getComma(pprice3,-1) end pprice3,
	   case when dbo.split(pprice4,'.',1) = 0 then dbo.getComma(pprice4,0) else dbo.getComma(pprice4,-1) end pprice4,
	   case when dbo.split(pprice5,'.',1) = 0 then dbo.getComma(pprice5,0) else dbo.getComma(pprice5,-1) end pprice5,
	   case when dbo.split(pprice6,'.',1) = 0 then dbo.getComma(pprice6,0) else dbo.getComma(pprice6,-1) end pprice6,
	   case when dbo.split(pprice7,'.',1) = 0 then dbo.getComma(pprice7,0) else dbo.getComma(pprice7,-1) end pprice7,
	   case when dbo.split(pmoney1,'.',1) = 0 then dbo.getComma(pmoney1,0) else dbo.getComma(pmoney1,0) end pmoney1,
	   case when dbo.split(pmoney2,'.',1) = 0 then dbo.getComma(pmoney2,0) else dbo.getComma(pmoney2,0) end pmoney2,
	   case when dbo.split(pmoney3,'.',1) = 0 then dbo.getComma(pmoney3,0) else dbo.getComma(pmoney3,0) end pmoney3,
	   case when dbo.split(pmoney4,'.',1) = 0 then dbo.getComma(pmoney4,0) else dbo.getComma(pmoney4,0) end pmoney4,
	   case when dbo.split(pmoney5,'.',1) = 0 then dbo.getComma(pmoney5,0) else dbo.getComma(pmoney5,0) end pmoney5,
	   case when dbo.split(pmoney6,'.',1) = 0 then dbo.getComma(pmoney6,0) else dbo.getComma(pmoney6,0) end pmoney6,
	   case when dbo.split(pmoney7,'.',1) = 0 then dbo.getComma(pmoney7,0) else dbo.getComma(pmoney7,0) end pmoney7,
	   dbo.getComma(money,0) money,
	   dbo.getComma(tax,0) tax, 
	   dbo.getComma(total,0) total,
	   memo,memo1,memo2,memo3,tt1,tt2,tt3,tm1,tm2,tm3,tm4,tm5,tm6,tm7,tm8 from @tmp2;